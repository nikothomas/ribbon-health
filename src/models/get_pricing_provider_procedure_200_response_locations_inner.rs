/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetPricingProviderProcedure200ResponseLocationsInner {
    /// The UUID of the location these prices correspond to.
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<uuid::Uuid>,
    #[serde(rename = "costs", skip_serializing_if = "Option::is_none")]
    pub costs: Option<models::GetPricingProviderProcedure200ResponseLocationsInnerCosts>,
}

impl GetPricingProviderProcedure200ResponseLocationsInner {
    pub fn new() -> GetPricingProviderProcedure200ResponseLocationsInner {
        GetPricingProviderProcedure200ResponseLocationsInner {
            uuid: None,
            costs: None,
        }
    }
}

