/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCustomProviders200ResponseDataInnerLocationsInner {
    /// A UUID uniquely identifying this location
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<uuid::Uuid>,
    #[serde(rename = "name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub name: Option<Option<String>>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "address_details", skip_serializing_if = "Option::is_none")]
    pub address_details: Option<models::GetCustomProviders200ResponseDataInnerLocationsInnerAddressDetails>,
    #[serde(rename = "latitude", skip_serializing_if = "Option::is_none")]
    pub latitude: Option<f64>,
    #[serde(rename = "longitude", skip_serializing_if = "Option::is_none")]
    pub longitude: Option<f64>,
    #[serde(rename = "google_maps_link", skip_serializing_if = "Option::is_none")]
    pub google_maps_link: Option<String>,
    /// 
    #[serde(rename = "phone_numbers", skip_serializing_if = "Option::is_none")]
    pub phone_numbers: Option<Vec<models::GetCustomProviders200ResponseDataInnerLocationsInnerPhoneNumbersInner>>,
    /// Fax numbers associated with this location.  This property only appears for customers purchasing fax data. If you would like this property and are not receiving it, please reach out to support.
    #[serde(rename = "faxes", skip_serializing_if = "Option::is_none")]
    pub faxes: Option<Vec<models::GetCustomProviders200ResponseDataInnerLocationsInnerFaxesInner>>,
    /// Each location contains a confidence score. This score indicates the probability of the given provider practicing at said location with the included contact information  This field will only be populated for Ribbon-provided locations. Locations you create yourself will have a confidence score of `null`.
    #[serde(rename = "confidence", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub confidence: Option<Option<f64>>,
    /// List of insurances the accepted at this location
    #[serde(rename = "insurances", skip_serializing_if = "Option::is_none")]
    pub insurances: Option<Vec<models::GetCustomProviders200ResponseDataInnerInsurancesInner>>,
    /// Comma separated list of standard 9-digit identification code(s) used by the IRS for business entities and used for contracting and paying provider/facility claims.
    #[serde(rename = "tins", skip_serializing_if = "Option::is_none")]
    pub tins: Option<Vec<String>>,
    /// This location's distance from the center of a geographic search, in miles.
    #[serde(rename = "distance", skip_serializing_if = "Option::is_none")]
    pub distance: Option<f64>,
}

impl GetCustomProviders200ResponseDataInnerLocationsInner {
    pub fn new() -> GetCustomProviders200ResponseDataInnerLocationsInner {
        GetCustomProviders200ResponseDataInnerLocationsInner {
            uuid: None,
            name: None,
            address: None,
            address_details: None,
            latitude: None,
            longitude: None,
            google_maps_link: None,
            phone_numbers: None,
            faxes: None,
            confidence: None,
            insurances: None,
            tins: None,
            distance: None,
        }
    }
}

