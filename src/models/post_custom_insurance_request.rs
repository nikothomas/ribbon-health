/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PostCustomInsuranceRequest : A JSON object mapping the name of the field to update to its new value
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostCustomInsuranceRequest {
    /// A UUID uniquely identifying this insurance
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<uuid::Uuid>,
    #[serde(rename = "carrier_association", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub carrier_association: Option<Option<String>>,
    #[serde(rename = "carrier_brand", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub carrier_brand: Option<Option<String>>,
    #[serde(rename = "carrier_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub carrier_name: Option<Option<String>>,
    #[serde(rename = "state", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub state: Option<Option<String>>,
    #[serde(rename = "plan_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub plan_name: Option<Option<String>>,
    #[serde(rename = "plan_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub plan_type: Option<Option<String>>,
    #[serde(rename = "metal_level", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metal_level: Option<Option<String>>,
    #[serde(rename = "display_name", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "network", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub network: Option<Option<String>>,
    #[serde(rename = "confidence", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub confidence: Option<Option<i32>>,
    #[serde(rename = "category", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub category: Option<Option<String>>,
    /// 
    #[serde(rename = "codes", skip_serializing_if = "Option::is_none")]
    pub codes: Option<Vec<models::GetCustomProviders200ResponseDataInnerInsurancesInnerCodesInner>>,
}

impl PostCustomInsuranceRequest {
    /// A JSON object mapping the name of the field to update to its new value
    pub fn new() -> PostCustomInsuranceRequest {
        PostCustomInsuranceRequest {
            uuid: None,
            carrier_association: None,
            carrier_brand: None,
            carrier_name: None,
            state: None,
            plan_name: None,
            plan_type: None,
            metal_level: None,
            display_name: None,
            network: None,
            confidence: None,
            category: None,
            codes: None,
        }
    }
}

