/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetProcedureCostEstimate200ResponseDataCostEstimates {
    /// Minimum cost for all of the given procedures combined.
    #[serde(rename = "minimum", skip_serializing_if = "Option::is_none")]
    pub minimum: Option<f64>,
    /// Median cost for all of the given procedures combined.
    #[serde(rename = "median", skip_serializing_if = "Option::is_none")]
    pub median: Option<f64>,
    /// Maximum cost for all of the given procedures combined.
    #[serde(rename = "maximum", skip_serializing_if = "Option::is_none")]
    pub maximum: Option<f64>,
}

impl GetProcedureCostEstimate200ResponseDataCostEstimates {
    pub fn new() -> GetProcedureCostEstimate200ResponseDataCostEstimates {
        GetProcedureCostEstimate200ResponseDataCostEstimates {
            minimum: None,
            median: None,
            maximum: None,
        }
    }
}

