/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetPricingProviderProcedure200ResponseLocationsInnerCosts {
    /// The minimum cost for this procedure in dollars
    #[serde(rename = "min", skip_serializing_if = "Option::is_none")]
    pub min: Option<f64>,
    /// The median cost for this procedure in dollars  This key is misnamed. For backwards compatibility, we have retained the legacy name.
    #[serde(rename = "avg", skip_serializing_if = "Option::is_none")]
    pub avg: Option<f64>,
    /// The maximum cost for this procedure in dollars
    #[serde(rename = "max", skip_serializing_if = "Option::is_none")]
    pub max: Option<f64>,
    /// Where this data is the costs for a procedure bundle rather than a regular procedure.
    #[serde(rename = "is_bundle", skip_serializing_if = "Option::is_none")]
    pub is_bundle: Option<bool>,
    #[serde(rename = "outpatient", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub outpatient: Option<Option<models::GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatient>>,
    #[serde(rename = "inpatient", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub inpatient: Option<Option<models::GetPricingProviders200ResponseDataInnerMatchedLocationCostsInpatient>>,
}

impl GetPricingProviderProcedure200ResponseLocationsInnerCosts {
    pub fn new() -> GetPricingProviderProcedure200ResponseLocationsInnerCosts {
        GetPricingProviderProcedure200ResponseLocationsInnerCosts {
            min: None,
            avg: None,
            max: None,
            is_bundle: None,
            outpatient: None,
            inpatient: None,
        }
    }
}

