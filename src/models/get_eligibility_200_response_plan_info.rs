/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetEligibility200ResponsePlanInfo {
    /// The identifier for this insurance partner in the Ribbon API
    #[serde(rename = "insurance_partner", skip_serializing_if = "Option::is_none")]
    pub insurance_partner: Option<String>,
    /// User-friendly display name for this insurance partner
    #[serde(rename = "plan_name", skip_serializing_if = "Option::is_none")]
    pub plan_name: Option<String>,
    /// Whether the member is actively covered by this plan
    #[serde(rename = "is_active", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    /// The starting date for the member's coverage by this plan
    #[serde(rename = "plan_start_date", skip_serializing_if = "Option::is_none")]
    pub plan_start_date: Option<String>,
    /// The ending date for the member's coverage by this plan
    #[serde(rename = "plan_end_date", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub plan_end_date: Option<Option<String>>,
}

impl GetEligibility200ResponsePlanInfo {
    pub fn new() -> GetEligibility200ResponsePlanInfo {
        GetEligibility200ResponsePlanInfo {
            insurance_partner: None,
            plan_name: None,
            is_active: None,
            plan_start_date: None,
            plan_end_date: None,
        }
    }
}

