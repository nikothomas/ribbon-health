/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetEligibility200ResponseParameters {
    /// The member's identification number
    #[serde(rename = "member_id", skip_serializing_if = "Option::is_none")]
    pub member_id: Option<String>,
    /// The member's first name
    #[serde(rename = "first_name", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// The member's last name
    #[serde(rename = "last_name", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// The member's birth date as an ISO-format date string
    #[serde(rename = "birth_date", skip_serializing_if = "Option::is_none")]
    pub birth_date: Option<String>,
    /// The identifier for this insurance partner in the Ribbon API
    #[serde(rename = "insurance_partner", skip_serializing_if = "Option::is_none")]
    pub insurance_partner: Option<String>,
}

impl GetEligibility200ResponseParameters {
    pub fn new() -> GetEligibility200ResponseParameters {
        GetEligibility200ResponseParameters {
            member_id: None,
            first_name: None,
            last_name: None,
            birth_date: None,
            insurance_partner: None,
        }
    }
}

