/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTins200ResponseParametersOneOf1 {
    /// String input that fuzzy searches across TINs, names, address, and legal_name.
    #[serde(rename = "search", skip_serializing_if = "Option::is_none")]
    pub search: Option<String>,
    /// The billing entity name that appears on claims data, or if available, the official legal name of the billing entity. String input that is fuzzy matched against the `name` field.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The legal name of the entity associated with the TIN. String input that is fuzzy matched against the `legal_name` field.
    #[serde(rename = "legal_name", skip_serializing_if = "Option::is_none")]
    pub legal_name: Option<String>,
    /// Boolean input that applies to tin_confirmed field.
    #[serde(rename = "has_tin", skip_serializing_if = "Option::is_none")]
    pub has_tin: Option<bool>,
    /// The page of the results which was returned.
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
    /// The number of results per page.
    #[serde(rename = "page_size", skip_serializing_if = "Option::is_none")]
    pub page_size: Option<i32>,
}

impl GetTins200ResponseParametersOneOf1 {
    pub fn new() -> GetTins200ResponseParametersOneOf1 {
        GetTins200ResponseParametersOneOf1 {
            search: None,
            name: None,
            legal_name: None,
            has_tin: None,
            page: None,
            page_size: None,
        }
    }
}

