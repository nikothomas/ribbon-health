/*
 * ribbon-health
 *
 * An API for interacting with the data provided by Ribbon Health, including information about healthcare providers, locations, insurances, and more. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatient : Costs associated with this procedure in an outpatient setting.  This key will only be populated for procedure bundles, and only if we have relevant data. A regular procedure will always have a `null` value here.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatient {
    /// The minimum cost for this procedure in this place of service, in dollars.
    #[serde(rename = "min")]
    pub min: f64,
    /// The median cost for this procedure in this place of service, in dollars.
    #[serde(rename = "median")]
    pub median: f64,
    /// The maximum cost for this procedure in this place of service, in dollars.
    #[serde(rename = "max")]
    pub max: f64,
    /// Where this data is the costs for a procedure bundle rather than a regular procedure.
    #[serde(rename = "is_bundle")]
    pub is_bundle: bool,
    /// Individual costs for the components that make up this procedure bundle.  For a regular procedure, this field will always be `null`.
    #[serde(rename = "components", deserialize_with = "Option::deserialize")]
    pub components: Option<Vec<models::GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatientComponentsInner>>,
}

impl GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatient {
    /// Costs associated with this procedure in an outpatient setting.  This key will only be populated for procedure bundles, and only if we have relevant data. A regular procedure will always have a `null` value here.
    pub fn new(min: f64, median: f64, max: f64, is_bundle: bool, components: Option<Vec<models::GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatientComponentsInner>>) -> GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatient {
        GetPricingProviders200ResponseDataInnerMatchedLocationCostsOutpatient {
            min,
            median,
            max,
            is_bundle,
            components,
        }
    }
}

